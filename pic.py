import streamlit as st
from datetime import datetime
from reportlab.pdfgen import canvas
from io import BytesIO

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="PIC - FORTNEER", page_icon="üè•", layout="wide")

# Cabe√ßalho
st.title("PIC - Protocolo de Interpreta√ß√£o e Conduta M√©dica")
st.subheader("FORTNEER - ASSESSORIA PARA REGULARIZA√á√ÉO EMPRESARIAL (Sombrio & Morro da Fuma√ßa)")
st.markdown("---")

# Menu lateral
menu = st.sidebar.selectbox("Menu", [
    "Introdu√ß√£o",
    "Aptid√£o para Atividades Cr√≠ticas",
    "Exames com Normas Espec√≠ficas",
    "Afastamento e Restri√ß√µes",
    "Retorno ao Trabalho",
    "Manipuladores de Alimentos",
    "Doen√ßas Relacionadas ao Trabalho",
    "Avalia√ß√µes N√£o Ocupacionais",
    "Avalia√ß√£o de PCD"
])

# Conte√∫do baseado na sele√ß√£o do menu
if menu == "Introdu√ß√£o":
    st.header("Introdu√ß√£o")
    st.write("""
    A conduta m√©dica para interpreta√ß√£o dos exames e defini√ß√£o de aptid√£o ao trabalho deve seguir crit√©rios t√©cnico-cient√≠ficos, √©ticos e normativos. 
    Este protocolo foi elaborado baseado nos preceitos √©ticos e na legisla√ß√£o vigente e tem por abrang√™ncia todos os atendimentos realizados por m√©dicos em agendamentos feitos pela FORTNEER ou por suas empresas clientes.
    """)
    
    st.subheader("Princ√≠pios Gerais")
    st.write("""
    1. Os m√©dicos examinadores devem seguir os crit√©rios deste protocolo, em alinhamento √†s al√≠neas 'c' e 'd' do item 7.5.4 da NR-7 e ao ¬ß 1¬∫ do Art. 5¬∫ da Resolu√ß√£o 2323/2022 do CFM.
    2. √â facultada a ado√ß√£o de condutas diferentes das sugeridas, desde que justificadas e registradas no prontu√°rio.
    3. Em caso de d√∫vidas ou condutas diferentes, o m√©dico deve contatar o respons√°vel pela sa√∫de ocupacional da FORTNEER.
    4. Os trabalhadores devem ser informados sobre os exames e seus resultados (conforme item 7.5.16 da NR-7).
    5. Observar toda a Resolu√ß√£o 2323/2022 do CFM, especialmente Art. 1¬∫, Art. 2¬∫ e Art. 4¬∫.
    """)
    
    st.subheader("Responsabilidades")
    st.write("""
    - O m√©dico pode solicitar repeti√ß√£o de exames ou novos exames para forma√ß√£o de convic√ß√£o t√©cnica.
    - Todas as condutas devem ser justificadas tecnicamente e discutidas com o m√©dico respons√°vel pelo PCMSO.
    """)

elif menu == "Aptid√£o para Atividades Cr√≠ticas":
    st.header("Aptid√£o e Inaptid√£o para Atividades Cr√≠ticas")
    st.write("""
    Atividades cr√≠ticas s√£o definidas na NR-7 como aquelas que exigem avalia√ß√£o m√©dica espec√≠fica para definir a aptid√£o do empregado.
    """)
    
    st.subheader("Exemplos de Atividades Cr√≠ticas")
    st.write("""
    - Trabalhos com risco significativo de queda de altura
    - Trabalhos em espa√ßos confinados
    - Opera√ß√µes diversas com risco significativo de acidentes
    - Condu√ß√£o habitual e frequente de ve√≠culos motorizados
    - Opera√ß√£o de m√°quinas perigosas
    - Opera√ß√£o constante de pontes rolantes
    - Atividades com risco de choques el√©tricos de grandes propor√ß√µes
    - Outras atividades que, a crit√©rio m√©dico, exijam avalia√ß√£o espec√≠fica
    """)
    
    st.subheader("Crit√©rio Tricolor")
    st.write("""
    Sistema de classifica√ß√£o para orientar a conduta m√©dica:
    """)
    
    col1, col2, col3 = st.columns(3)
    with col1:
        st.success("**Sinal Verde**")
        st.write("Condi√ß√£o que, por si s√≥, n√£o deve ser considerada como crit√©rio de incompatibilidade.")
    with col2:
        st.warning("**Sinal Amarelo**")
        st.write("Condi√ß√£o que merece investiga√ß√£o e/ou acompanhamento. O m√©dico deve definir se o trabalhador pode exercer as atividades.")
    with col3:
        st.error("**Sinal Vermelho**")
        st.write("Existe contraindica√ß√£o para a execu√ß√£o de atividades cr√≠ticas.")
    
    st.subheader("Avalia√ß√µes Espec√≠ficas")
    evaluation = st.selectbox("Selecione a avalia√ß√£o:", [
        "Acuidade Visual e Avalia√ß√£o Oftalmol√≥gica",
        "Arritmias Card√≠acas e ECG",
        "Hipertens√£o Arterial",
        "Diabetes e Glicemia em Jejum",
        "Obesidade",
        "Anemias e Hemograma",
        "Equil√≠brio e Consci√™ncia",
        "Fatores Psicossociais",
        "Acuidade Auditiva"
    ])
    
    if evaluation == "Acuidade Visual e Avalia√ß√£o Oftalmol√≥gica":
        st.subheader("Acuidade Visual e Avalia√ß√£o Oftalmol√≥gica")
        
        col1, col2, col3 = st.columns(3)
        with col1:
            st.success("**Sinal Verde**")
            st.write("""
            - Acuidade Visual ‚â• 20/40 em cada olho
            - Acuidade Visual ‚â• 20/30 + PL em um dos olhos
            - Vis√£o perif√©rica ‚â• 60¬∞ em cada olho ou ‚â• 120¬∞ em um olho
            """)
        with col2:
            st.warning("**Sinal Amarelo**")
            st.write("""
            - Vis√£o monocular com perda visual antiga + vis√£o perif√©rica ‚â• 120¬∞
            """)
        with col3:
            st.error("**Sinal Vermelho**")
            st.write("""
            - Vis√£o monocular com perda visual recente
            """)
    
    elif evaluation == "Arritmias Card√≠acas e ECG":
        st.subheader("Arritmias Card√≠acas e ECG (Eletrocardiograma)")
        
        col1, col2, col3 = st.columns(3)
        with col1:
            st.success("**Sinal Verde**")
            st.write("""
            - Altera√ß√µes de repolariza√ß√£o ventricular
            - Extrass√≠stoles atriais isoladas
            - Bradiarritmia sinusal > 45 bpm
            - BAV 1¬∞ grau
            - BRD isolado
            - Bloqueio do fasc√≠culo anterior-superior E
            - Bloqueio do fasc√≠culo postero-inferior
            """)
        with col2:
            st.warning("**Sinal Amarelo**")
            st.write("""
            - Sobrecarga de VE
            - Extrass√≠stoles atriais frequentes
            - Extra-s√≠stoles ventriculares isoladas e frequentes
            - Bradiarritmia sinusal ‚â§ 45 bpm
            - BAV 2¬∞ grau tipo I
            - BRE (avalia√ß√£o cardiol√≥gica rigorosa)
            """)
        with col3:
            st.error("**Sinal Vermelho**")
            st.write("""
            - BAV 2¬∞ grau tipo II adquirido
            - BAV total
            - Taquicardia Supraventricular Parox√≠stica
            """)
    
    elif evaluation == "Hipertens√£o Arterial":
        st.subheader("Hipertens√£o Arterial")
        
        st.write("""
        **Classifica√ß√£o da press√£o arterial (a partir de 18 anos):**
        """)
        
        st.table({
            "Classifica√ß√£o": ["PA √≥tima", "PA normal", "Pr√©-hipertens√£o", "HA Est√°gio 1", "HA Est√°gio 2", "HA Est√°gio 3"],
            "PAS (mmHg)": ["< 120", "120-129", "130-139", "140-159", "160-179", "‚â• 180"],
            "PAD (mmHg)": ["< 80", "80-84", "85-89", "90-99", "100-109", "‚â• 110"]
        })
        
        st.write("""
        **Fatores de risco coexistentes:**
        - Sexo masculino
        - Idade: > 55 anos (homem), > 65 anos (mulher)
        - DCV prematura em parentes de 1¬∫ grau
        - Tabagismo
        - Dislipidemia
        - Diabetes melito
        - Obesidade (IMC ‚â• 30 kg/m¬≤)
        """)
        
        st.write("""
        **Classifica√ß√£o de risco:**
        """)
        
        col1, col2, col3 = st.columns(3)
        with col1:
            st.success("**Sinal Verde**")
            st.write("Indiv√≠duos com risco basal ou baixo risco adicional")
        with col2:
            st.warning("**Sinal Amarelo**")
            st.write("Indiv√≠duos com moderado risco adicional - avalia√ß√£o cardiol√≥gica e relat√≥rio")
        with col3:
            st.error("**Sinal Vermelho**")
            st.write("""
            - Indiv√≠duos com alto risco adicional
            - Hipotens√£o ortost√°tica (redu√ß√£o ‚â•20 mmHg PAS ou ‚â•10 mmHg PAD ao 3¬∫ minuto em p√©)
            """)
    
    elif evaluation == "Diabetes e Glicemia em Jejum":
        st.subheader("Diabetes e Glicemia em Jejum")
        
        col1, col2, col3 = st.columns(3)
        with col1:
            st.success("**Sinal Verde**")
            st.write("Diabetes mellitus n√£o insulinodependente bem controlado - GJ < 130 mg/dl")
        with col2:
            st.warning("**Sinal Amarelo**")
            st.write("""
            - Diabetes mellitus n√£o insulinodependente mal controlado - GJ > 130 mg/dl
            - Diab√©ticos com PA>140/90
            """)
        with col3:
            st.error("**Sinal Vermelho**")
            st.write("Diabetes mellitus insulinodependente")
    
    elif evaluation == "Obesidade":
        st.subheader("Obesidade")
        
        st.write("""
        **Classifica√ß√£o pelo IMC (kg/m¬≤):**
        """)
        
        st.table({
            "IMC": ["<18,5", "18,5-24,9", "25-29,9", "30-34,9", "35-39,9", "‚â•40,0"],
            "Classifica√ß√£o": ["Magro/baixo peso", "Normal/eutr√≥fico", "Sobrepeso/pr√©-obeso", "Obesidade", "Obesidade", "Obesidade grave"],
            "Grau": ["0", "0", "0", "I", "II", "III"],
            "Risco": ["Normal/elevado", "Normal", "Pouco elevado", "Elevado", "Muito elevado", "Muit√≠ssimo elevado"]
        })
        
        st.write("""
        **Crit√©rio tricolor:**
        """)
        
        col1, col2, col3 = st.columns(3)
        with col1:
            st.success("**Sinal Verde**")
            st.write("Obesidade grau I com IMC > 30 com at√© 100kg")
        with col2:
            st.warning("**Sinal Amarelo**")
            st.write("""
            - Obesidade Grau I com IMC > 30 com mais de 100kg
            - Obesidade Grau II e III com IMC > 35 com at√© 100kg
            """)
        with col3:
            st.error("**Sinal Vermelho**")
            st.write("""
            - Obesidade Grau II e III com IMC > 35 com mais de 100kg*
            *Pode ser sinal amarelo ou vermelho a crit√©rio m√©dico
            """)
    
    elif evaluation == "Anemias e Hemograma":
        st.subheader("Anemias e Hemograma")
        
        col1, col2, col3 = st.columns(3)
        with col1:
            st.success("**Sinal Verde**")
            st.write("-")
        with col2:
            st.warning("**Sinal Amarelo**")
            st.write("Anemias com Hb > 8g/dL sem epis√≥dios de lipotimia ou s√≠ncope")
        with col3:
            st.error("**Sinal Vermelho**")
            st.write("""
            - Anemias com Hb > 8g/dL com epis√≥dio de lipotimia ou s√≠ncope
            - Anemias com Hb < 8g/dL
            - Anemias hemol√≠ticas, falciforme, talassemia major e outras com crises frequentes
            """)
    
    elif evaluation == "Equil√≠brio e Consci√™ncia":
        st.subheader("Equil√≠brio e Consci√™ncia")
        
        col1, col2, col3 = st.columns(3)
        with col1:
            st.success("**Sinal Verde**")
            st.write("-")
        with col2:
            st.warning("**Sinal Amarelo**")
            st.write("""
            - S√≠ndromes labir√≠nticas
            - Epilepsia em bom controle (sem crises h√° >1 ano)
            """)
        with col3:
            st.error("**Sinal Vermelho**")
            st.write("""
            - Epilepsia sem controle adequado ou com crise nos √∫ltimos 12 meses
            - S√≠ncope com causa card√≠aca
            """)
    
    elif evaluation == "Fatores Psicossociais":
        st.subheader("Fatores Psicossociais")
        
        col1, col2, col3 = st.columns(3)
        with col1:
            st.success("**Sinal Verde**")
            st.write("-")
        with col2:
            st.warning("**Sinal Amarelo**")
            st.write("-")
        with col3:
            st.error("**Sinal Vermelho**")
            st.write("""
            - Acrofobia (p√¢nico de altura)
            - Uso constante de √°lcool/drogas/medica√ß√µes que interferem na cogni√ß√£o
            - Alcoolismo
            - S√≠ndrome do p√¢nico
            - Grau de instru√ß√£o incompat√≠vel
            """)
    
    elif evaluation == "Acuidade Auditiva":
        st.subheader("Acuidade Auditiva")
        
        st.write("""
        - Avalia√ß√£o inicial por prova da voz coloquial (2m de dist√¢ncia, sem leitura labial)
        - Em caso de reprova√ß√£o, solicitar audiometria tonal a√©rea
        - Crit√©rio de aptid√£o: m√©dia aritm√©tica em 500, 1000 e 2000 Hz <40 dB na orelha melhor
        - Entre 40-56 dB: avaliar necessidade de pr√≥tese auditiva
        - Declarar "obrigat√≥rio o uso de pr√≥tese auditiva" quando aplic√°vel
        """)

elif menu == "Exames com Normas Espec√≠ficas":
    st.header("Exames com Crit√©rios Definidos em Normas Espec√≠ficas")
    
    st.write("""
    Alguns exames possuem crit√©rios para interpreta√ß√£o e conduta m√©dica definidos em normas espec√≠ficas. 
    Nesses casos, prevalece o crit√©rio estabelecido pelos √≥rg√£os competentes e as normativas vigentes.
    """)
    
    st.subheader("NR-7 - Item 7.5.19.5")
    st.write("""
    Constatada ocorr√™ncia ou agravamento de doen√ßa relacionada ao trabalho ou altera√ß√£o que revele disfun√ß√£o org√¢nica:
    """)
    
    st.write("""
    1. Emitir a Comunica√ß√£o de Acidente do Trabalho (CAT)
    2. Afastar o empregado quando necess√°rio
    3. Encaminhar √† Previd√™ncia Social para afastamentos >15 dias
    4. Reavaliar os riscos ocupacionais e medidas de preven√ß√£o no PGR
    """)

elif menu == "Afastamento e Restri√ß√µes":
    st.header("Afastamento, Restri√ß√µes e Viabiliza√ß√£o de Posto Compat√≠vel")
    
    st.write("""
    Os m√©dicos podem prescrever modifica√ß√µes ou restri√ß√µes nas atividades de trabalho, tempor√°rias ou permanentes, 
    independentemente da origem ocupacional da patologia.
    """)
    
    st.subheader("Procedimentos")
    st.write("""
    1. Avaliar a condi√ß√£o de sa√∫de do trabalhador
    2. Prescrever as restri√ß√µes e recomenda√ß√µes
    3. Registrar em prontu√°rio m√©dico e documento apartado
    4. Notificar a organiza√ß√£o (respeitando sigilo m√©dico)
    """)
    
    st.write("""
    **Base Legal:**
    - Lei 605/1949 (¬ß2¬∫ Art.6¬∫)
    - NR-7 (item 7.5.9.1, al√≠neas "c", "f", "i" e "k" do item 7.3.2)
    - Resolu√ß√£o CFM 2323/2022 (Art.4¬∫)
    """)

elif menu == "Retorno ao Trabalho":
    st.header("Exame M√©dico de Retorno ao Trabalho")
    
    st.write("""
    Deve ser realizado antes que o empregado reassuma suas fun√ß√µes, quando ausente por ‚â•30 dias por doen√ßa ou acidente 
    (ocupacional ou n√£o).
    """)
    
    st.subheader("Objetivos")
    st.write("""
    - Avaliar regress√£o do quadro que originou o afastamento
    - Verificar se n√£o houve outros agravos √† sa√∫de
    - Definir necessidade de retorno gradativo
    - Propor orienta√ß√µes ou adapta√ß√µes quando necess√°rio
    """)
    
    st.subheader("Procedimentos")
    st.write("""
    1. Realizar exame cl√≠nico antes do retorno
    2. Definir exames complementares conforme PCMSO
    3. Em caso de exames peri√≥dicos vencidos, agendar novo exame
    """)
    
    st.subheader("Limbo Trabalhista Previdenci√°rio")
    st.write("""
    Situa√ß√£o em que o trabalhador n√£o recebe pagamentos da empresa nem da Previd√™ncia.
    """)
    
    st.write("""
    **Recomenda√ß√µes para evitar o limbo:**
    - Considerar a hierarquia dos atestados (decis√£o do INSS √© soberana)
    - Quando poss√≠vel, realizar exame 1-2 dias ANTES da DCB (Data de Cessa√ß√£o do Benef√≠cio)
    - Tentar viabilizar o retorno, mesmo com restri√ß√µes
    - Em caso de inaptid√£o, solicitar prorroga√ß√£o do benef√≠cio
    """)
    
    st.write("""
    **Refer√™ncias Legais:**
    - Lei 605/1949
    - S√∫mula 15 do TST
    - Lei 11907/2009 (¬ß3¬∫ Art.30)
    - Resolu√ß√£o CFM 2323/2022 (Art.4¬∫ e inciso II do Art.3¬∫)
    - NR-7 (itens 7.5.9, 7.5.9.1 e al√≠neas "f", "j" e "k" do item 7.3.2)
    """)

elif menu == "Manipuladores de Alimentos":
    st.header("Manipuladores de Alimentos")
    
    st.write("""
    Base legal: RDC 216/2004 e 275/2002 da Vigil√¢ncia Sanit√°ria.
    """)
    
    st.subheader("Aptid√£o para Manipula√ß√£o de Alimentos")
    st.write("""
    1. Declarar no ASO ou documento separado a aptid√£o/inaptid√£o
    2. N√£o h√° obrigatoriedade de exames complementares, exceto se determinado pelo PCMSO ou Vigil√¢ncia Sanit√°ria local
    3. Considerar crit√©rios da RDC 216/2004 (item 4.6.2) e RDC 275/2002 (Anexo II, item 3.3.1)
    """)
    
    st.subheader("Crit√©rios para Inaptid√£o Tempor√°ria")
    st.write("""
    - Les√µes ou sintomas de enfermidades que possam comprometer a qualidade higi√™nico-sanit√°ria dos alimentos
    - Afec√ß√µes cut√¢neas, feridas e supura√ß√µes
    - Sintomas e infec√ß√µes respirat√≥rias, gastrointestinais e oculares
    """)
    
    st.subheader("Condutas para Achados Espec√≠ficos")
    st.write("""
    **1. Endolimax nana e Entamoeba coli:**
    - Normalmente n√£o patol√≥gicos
    - Orientar acompanhamento m√©dico assistencial
    - N√£o recomendar inaptid√£o nem tratamento
    
    **2. Ameb√≠ase ou giard√≠ase:**
    - Prescrever SECNIDAZOL 1000mg (2 comprimidos em dose √∫nica)
    - Pode declarar aptid√£o com tratamento
    - Repetir exame ap√≥s 14 dias
    
    **3. Outros achados:**
    - Analisar caso a caso
    - Pode manter ASO retido para solicitar exames ou relat√≥rios
    - Discutir com medicina do trabalho da FORTNEER
    """)

elif menu == "Doen√ßas Relacionadas ao Trabalho":
    st.header("Doen√ßas Possivelmente Relacionadas ao Trabalho")
    
    st.write("""
    Em caso de suspeita, o m√©dico deve proceder com investiga√ß√£o, ap√≥s comunica√ß√£o e discuss√£o com o m√©dico respons√°vel pelo PCMSO.
    """)
    
    st.subheader("Crit√©rios de Investiga√ß√£o (Resolu√ß√£o 2323/2022 - Art.2¬∫)")
    st.write("""
    1. Hist√≥ria cl√≠nica e ocupacional
    2. Estudo do local de trabalho
    3. Estudo da organiza√ß√£o do trabalho
    4. Dados epidemiol√≥gicos
    5. Literatura cient√≠fica
    6. Quadro cl√≠nico em trabalhadores com riscos semelhantes
    7. Identifica√ß√£o de riscos f√≠sicos, qu√≠micos, biol√≥gicos, etc.
    8. Depoimento dos trabalhadores
    9. Conhecimentos de outras disciplinas
    """)
    
    st.warning("""
    **Aten√ß√£o:** √â vedado determinar nexo causal sem observar estes crit√©rios!
    """)
    
    st.subheader("Procedimentos em Caso de Confirma√ß√£o")
    st.write("""
    1. Informar ao M√©dico Respons√°vel pelo PCMSO (para emiss√£o de CAT)
    2. Indicar afastamento quando necess√°rio
    3. Encaminhar √† Previd√™ncia para afastamentos >15 dias
    4. Realizar orienta√ß√µes previdenci√°rias e trabalhistas
    5. Sugerir melhorias no ambiente de trabalho
    6. Orientar o trabalhador sobre medidas de controle
    7. Colaborar com investiga√ß√£o do local de trabalho
    """)

elif menu == "Avalia√ß√µes N√£o Ocupacionais":
    st.header("Avalia√ß√µes e Consultas N√£o Ocupacionais")
    
    st.write("""
    A √°rea de Sa√∫de Ocupacional pode convocar trabalhadores para avalia√ß√µes n√£o relacionadas aos exames m√©dicos ocupacionais.
    """)
    
    st.subheader("Situa√ß√µes")
    st.write("""
    - Atendimentos m√©dicos ou de enfermagem n√£o demandam ASO
    - Solicita√ß√µes das lideran√ßas para esclarecimento da condi√ß√£o de sa√∫de
    - Orienta√ß√µes aos trabalhadores
    """)
    
    st.info("""
    **Observa√ß√£o:** Sempre respeitar o sigilo m√©dico e legal.
    """)

elif menu == "Avalia√ß√£o de PCD":
    st.header("Avalia√ß√µes de PCD (Pessoas com Defici√™ncia)")
    
    st.write("""
    Para fins de cumprimento do Art. 93 da Lei 8213/1991 (cotas).
    """)
    
    st.subheader("Base Legal")
    st.write("""
    - Conven√ß√£o sobre os Direitos das Pessoas com Defici√™ncia
    - Lei Brasileira de Inclus√£o (Lei 13.146/2015)
    - Lei 12.764/2012 (autismo)
    - Decretos 3298/1999, 5296/2004 e 6949/2009
    - Parecer CONJUR 444/2011
    - IN SIT/MTE 98/2012
    """)
    
    # Formul√°rio para preenchimento do laudo
    with st.form("form_laudo_pcd"):
        st.subheader("Dados da Empresa")
        empresa_razao_social = st.text_input("Raz√£o Social da Empresa")
        empresa_endereco = st.text_input("Endere√ßo da Empresa")
        empresa_telefone = st.text_input("Telefone da Empresa")
        
        st.subheader("Dados do Trabalhador")
        nome = st.text_input("Nome Completo")
        matricula = st.text_input("Matr√≠cula")
        data_nascimento = st.date_input("Data de Nascimento")
        rg = st.text_input("RG")
        sexo = st.radio("Sexo", ["Feminino", "Masculino"])
        
        st.subheader("Avalia√ß√£o M√©dica")
        origem_deficiencia = st.selectbox("Origem da Defici√™ncia", [
            "Acidente - Trabalho",
            "Acidente - Comum",
            "Adquirida",
            "Cong√™nita",
            "Doen√ßa",
            "Heredit√°ria",
            "P√≥s Operat√≥rio"
        ])
        cid = st.text_input("CID-10")
        data_manifestacao = st.date_input("Data de in√≠cio das manifesta√ß√µes")
        pcd_reabilitado = st.radio("PCD Reabilitado", ["Sim", "N√£o"])
        
        st.subheader("Descri√ß√£o da Defici√™ncia")
        alteracoes = st.text_area("Descri√ß√£o detalhada das altera√ß√µes f√≠sicas, sensoriais, intelectuais e mentais")
        limitacoes = st.text_area("Descri√ß√£o das limita√ß√µes funcionais para atividades da vida di√°ria e social")
        
        st.subheader("Tipo de Defici√™ncia")
        deficiencia_fisica = st.checkbox("Defici√™ncia F√≠sica")
        deficiencia_auditiva = st.checkbox("Defici√™ncia Auditiva")
        deficiencia_visual = st.checkbox("Defici√™ncia Visual")
        deficiencia_intelectual = st.checkbox("Defici√™ncia Intelectual")
        deficiencia_mental = st.checkbox("Defici√™ncia Mental")
        deficiencia_multipla = st.checkbox("Defici√™ncia M√∫ltipla")
        
        submitted = st.form_submit_button("Gerar Laudo PCD")
        
        if submitted:
            # Criar um novo PDF com os dados preenchidos
            buffer = BytesIO()
            c = canvas.Canvas(buffer)
            
            # P√°gina 1
            c.setFont("Helvetica-Bold", 14)
            c.drawString(100, 800, "FORTNEER ENGENHARIA EIRELI")
            c.drawString(100, 785, empresa_endereco)
            c.drawString(100, 770, f"Fone: {empresa_telefone}")
            
            c.setFont("Helvetica-Bold", 16)
            c.drawString(100, 740, "LAUDO CARACTERIZADOR DE DEFICI√äNCIA")
            
            c.setFont("Helvetica", 10)
            c.drawString(100, 720, "De acordo com o Decreto 3.298/1999 e com a Instru√ß√£o Normativa SIT/ MTE n.¬∫ 98 de 15/08/2012,")
            c.drawString(100, 705, "observados os dispositivos da Conven√ß√£o sobre os Direitos das Pessoas com defici√™ncia e Lei 12764/12")
            
            # Tabela de identifica√ß√£o
            c.setFont("Helvetica-Bold", 10)
            c.drawString(100, 680, "Identifica√ß√£o Empresa/Raz√£o Social")
            c.drawString(350, 680, empresa_razao_social)
            
            c.drawString(100, 660, "Nome")
            c.drawString(350, 660, nome)
            
            c.drawString(100, 640, "Matr√≠cula")
            c.drawString(350, 640, matricula)
            
            c.drawString(100, 620, "Data Nascimento")
            c.drawString(350, 620, str(data_nascimento))
            
            c.drawString(100, 600, "Documento RG:")
            c.drawString(350, 600, rg)
            
            c.drawString(100, 580, f"Sexo ({'X' if sexo == 'Feminino' else ' '})Feminino ({'X' if sexo == 'Masculino' else ' '})Masculino")
            
            # Avalia√ß√£o
            c.drawString(100, 550, f"Origem Defici√™ncia ({'X'}) {origem_deficiencia}")
            c.drawString(100, 530, f"CID {cid} In√≠cio das manifesta√ß√µes {data_manifestacao}")
            c.drawString(100, 510, f"PCD Reabilitado ({'X' if pcd_reabilitado == 'Sim' else ' '}) Sim ({'X' if pcd_reabilitado == 'N√£o' else ' '}) N√£o")
            
            # Descri√ß√µes
            c.drawString(100, 480, "Descri√ß√£o detalhada das altera√ß√µes f√≠sicas, sensoriais, intelectuais e mentais:")
            textobject = c.beginText(100, 460)
            for line in alteracoes.split('\n'):
                textobject.textLine(line)
            c.drawText(textobject)
            
            c.drawString(100, 400, "Descri√ß√£o das limita√ß√µes funcionais para atividades da vida di√°ria e social:")
            textobject = c.beginText(100, 380)
            for line in limitacoes.split('\n'):
                textobject.textLine(line)
            c.drawText(textobject)
            
            # Tipos de defici√™ncia
            c.drawString(100, 320, "I - Defici√™ncia F√≠sica")
            c.drawString(120, 300, f"({'X' if deficiencia_fisica else ' '}) Altera√ß√£o F√≠sica - [descri√ß√£o]")
            
            c.drawString(100, 270, "II - Defici√™ncia Auditiva")
            c.drawString(120, 250, f"({'X' if deficiencia_auditiva else ' '}) Perda Auditiva - [descri√ß√£o]")
            
            # [...] Continuar com os outros tipos de defici√™ncia
            
            c.showPage()  # P√°gina 2
            
            # Termo de ci√™ncia
            c.setFont("Helvetica-Bold", 14)
            c.drawString(100, 800, "FORTNEER ENGENHARIA EIRELI")
            c.drawString(100, 785, empresa_endereco)
            c.drawString(100, 770, f"Fone: {empresa_telefone}")
            
            c.setFont("Helvetica", 12)
            c.drawString(100, 730, "Estou ciente de que estou sendo enquadrado na cota de pessoas com defici√™ncia/reabilitados da empresa.")
            c.drawString(100, 710, "Autorizo a apresenta√ß√£o deste Laudo e exames ao Minist√©rio do Trabalho e Emprego.")
            
            c.drawString(100, 670, "Assinatura do Avaliado: ___________________________")
            c.drawString(100, 650, "Data: ____/____/____")
            
            c.save()
            
            pdf_bytes = buffer.getvalue()
            buffer.close()
            
            st.success("Laudo gerado com sucesso!")
            
            st.download_button(
                label="Baixar Laudo PCD",
                data=pdf_bytes,
                file_name=f"laudo_pcd_{nome.replace(' ', '_')}.pdf",
                mime="application/pdf"
            )

# Rodap√©
st.markdown("---")
st.write(""" 
**FORTNEER - ASSESSORIA PARA REGULARIZA√á√ÉO EMPRESARIAL**

Atualizado em: 29 DE MAIO DE 2025  
""")
